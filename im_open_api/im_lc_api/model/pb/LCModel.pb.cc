// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: LCModel.proto
// Protobuf C++ Version: 5.29.3

#include "LCModel.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace roc {
namespace im {
namespace sdk {
namespace net {

inline constexpr SendBatchMessageResp::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : send_message_response_arr_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SendBatchMessageResp::SendBatchMessageResp(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SendBatchMessageRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendBatchMessageRespDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendBatchMessageRespDefaultTypeInternal() {}
  union {
    SendBatchMessageResp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendBatchMessageRespDefaultTypeInternal _SendBatchMessageResp_default_instance_;

inline constexpr FetchSingleLinkMessagesReq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : conversation_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        from_index_{::int64_t{0}},
        to_index_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FetchSingleLinkMessagesReq::FetchSingleLinkMessagesReq(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FetchSingleLinkMessagesReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FetchSingleLinkMessagesReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FetchSingleLinkMessagesReqDefaultTypeInternal() {}
  union {
    FetchSingleLinkMessagesReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FetchSingleLinkMessagesReqDefaultTypeInternal _FetchSingleLinkMessagesReq_default_instance_;

inline constexpr FetchMixedLinkMessagesReq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : conversation_id_arr_{},
        count_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FetchMixedLinkMessagesReq::FetchMixedLinkMessagesReq(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FetchMixedLinkMessagesReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FetchMixedLinkMessagesReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FetchMixedLinkMessagesReqDefaultTypeInternal() {}
  union {
    FetchMixedLinkMessagesReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FetchMixedLinkMessagesReqDefaultTypeInternal _FetchMixedLinkMessagesReq_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR Conversation_ExtEntry_DoNotUse::Conversation_ExtEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Conversation_ExtEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Conversation_ExtEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Conversation_ExtEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Conversation_ExtEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Conversation_ExtEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Conversation_ExtEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Conversation_ExtEntry_DoNotUseDefaultTypeInternal _Conversation_ExtEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ContentMessage_ExtEntry_DoNotUse::ContentMessage_ExtEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ContentMessage_ExtEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ContentMessage_ExtEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ContentMessage_ExtEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ContentMessage_ExtEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ContentMessage_ExtEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ContentMessage_ExtEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ContentMessage_ExtEntry_DoNotUseDefaultTypeInternal _ContentMessage_ExtEntry_DoNotUse_default_instance_;

inline constexpr CmdMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : cmd_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CmdMessage::CmdMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CmdMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CmdMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CmdMessageDefaultTypeInternal() {}
  union {
    CmdMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CmdMessageDefaultTypeInternal _CmdMessage_default_instance_;

inline constexpr Conversation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : ext_{},
        convertsion_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        owner_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Conversation::Conversation(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ConversationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConversationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConversationDefaultTypeInternal() {}
  union {
    Conversation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConversationDefaultTypeInternal _Conversation_default_instance_;

inline constexpr ContentMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : ext_{},
        message_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        content_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sender_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        convertsion_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_type_{::int64_t{0}},
        index_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ContentMessage::ContentMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ContentMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ContentMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ContentMessageDefaultTypeInternal() {}
  union {
    ContentMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ContentMessageDefaultTypeInternal _ContentMessage_default_instance_;

inline constexpr SendBatchMessageReq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_arr_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SendBatchMessageReq::SendBatchMessageReq(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SendBatchMessageReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendBatchMessageReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendBatchMessageReqDefaultTypeInternal() {}
  union {
    SendBatchMessageReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendBatchMessageReqDefaultTypeInternal _SendBatchMessageReq_default_instance_;

inline constexpr Message::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        cmdmessage_{nullptr},
        contentmessage_{nullptr},
        iscmd_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Message::Message(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageDefaultTypeInternal() {}
  union {
    Message _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageDefaultTypeInternal _Message_default_instance_;

inline constexpr RequestBody::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        request_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        fetch_mixed_link_messages_request_{nullptr},
        fetch_single_link_messages_request_{nullptr},
        send_batch_messages_request_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RequestBody::RequestBody(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RequestBodyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestBodyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestBodyDefaultTypeInternal() {}
  union {
    RequestBody _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestBodyDefaultTypeInternal _RequestBody_default_instance_;

inline constexpr PushMessages::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : push_message_arr_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PushMessages::PushMessages(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PushMessagesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PushMessagesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PushMessagesDefaultTypeInternal() {}
  union {
    PushMessages _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PushMessagesDefaultTypeInternal _PushMessages_default_instance_;

inline constexpr ConversationMessages::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_arr_{},
        conversation_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ConversationMessages::ConversationMessages(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ConversationMessagesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConversationMessagesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConversationMessagesDefaultTypeInternal() {}
  union {
    ConversationMessages _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConversationMessagesDefaultTypeInternal _ConversationMessages_default_instance_;

inline constexpr FetchSingleLinkMessagesResp::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        conversation_messages_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR FetchSingleLinkMessagesResp::FetchSingleLinkMessagesResp(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FetchSingleLinkMessagesRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FetchSingleLinkMessagesRespDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FetchSingleLinkMessagesRespDefaultTypeInternal() {}
  union {
    FetchSingleLinkMessagesResp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FetchSingleLinkMessagesRespDefaultTypeInternal _FetchSingleLinkMessagesResp_default_instance_;

inline constexpr FetchMixedLinkMessagesResp::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : conversation_messages_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FetchMixedLinkMessagesResp::FetchMixedLinkMessagesResp(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FetchMixedLinkMessagesRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FetchMixedLinkMessagesRespDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FetchMixedLinkMessagesRespDefaultTypeInternal() {}
  union {
    FetchMixedLinkMessagesResp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FetchMixedLinkMessagesRespDefaultTypeInternal _FetchMixedLinkMessagesResp_default_instance_;

inline constexpr ResponseBody::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        response_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        fetch_mixed_link_messages_response_{nullptr},
        fetch_single_link_messages_response_{nullptr},
        send_batch_messages_response_{nullptr},
        push_messages_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ResponseBody::ResponseBody(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResponseBodyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseBodyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseBodyDefaultTypeInternal() {}
  union {
    ResponseBody _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseBodyDefaultTypeInternal _ResponseBody_default_instance_;
}  // namespace net
}  // namespace sdk
}  // namespace im
}  // namespace roc
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_LCModel_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_LCModel_2eproto = nullptr;
const ::uint32_t
    TableStruct_LCModel_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::Conversation_ExtEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::Conversation_ExtEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::Conversation_ExtEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::Conversation_ExtEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::Conversation, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::Conversation, _impl_.convertsion_id_),
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::Conversation, _impl_.owner_id_),
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::Conversation, _impl_.ext_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::CmdMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::CmdMessage, _impl_.cmd_),
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::ContentMessage_ExtEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::ContentMessage_ExtEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::ContentMessage_ExtEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::ContentMessage_ExtEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::ContentMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::ContentMessage, _impl_.message_id_),
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::ContentMessage, _impl_.content_),
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::ContentMessage, _impl_.ext_),
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::ContentMessage, _impl_.sender_id_),
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::ContentMessage, _impl_.convertsion_id_),
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::ContentMessage, _impl_.message_type_),
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::ContentMessage, _impl_.index_),
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::Message, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::Message, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::Message, _impl_.iscmd_),
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::Message, _impl_.cmdmessage_),
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::Message, _impl_.contentmessage_),
        ~0u,
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::ConversationMessages, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::ConversationMessages, _impl_.conversation_id_),
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::ConversationMessages, _impl_.message_arr_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::FetchSingleLinkMessagesReq, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::FetchSingleLinkMessagesReq, _impl_.conversation_id_),
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::FetchSingleLinkMessagesReq, _impl_.from_index_),
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::FetchSingleLinkMessagesReq, _impl_.to_index_),
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::FetchSingleLinkMessagesResp, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::FetchSingleLinkMessagesResp, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::FetchSingleLinkMessagesResp, _impl_.conversation_messages_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::FetchMixedLinkMessagesReq, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::FetchMixedLinkMessagesReq, _impl_.conversation_id_arr_),
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::FetchMixedLinkMessagesReq, _impl_.count_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::FetchMixedLinkMessagesResp, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::FetchMixedLinkMessagesResp, _impl_.conversation_messages_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::SendBatchMessageReq, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::SendBatchMessageReq, _impl_.message_arr_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::SendBatchMessageResp, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::SendBatchMessageResp, _impl_.send_message_response_arr_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::PushMessages, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::PushMessages, _impl_.push_message_arr_),
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::RequestBody, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::RequestBody, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::RequestBody, _impl_.request_id_),
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::RequestBody, _impl_.fetch_mixed_link_messages_request_),
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::RequestBody, _impl_.fetch_single_link_messages_request_),
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::RequestBody, _impl_.send_batch_messages_request_),
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::RequestBody, _impl_.url_),
        ~0u,
        0,
        1,
        2,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::ResponseBody, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::ResponseBody, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::ResponseBody, _impl_.response_id_),
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::ResponseBody, _impl_.fetch_mixed_link_messages_response_),
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::ResponseBody, _impl_.fetch_single_link_messages_response_),
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::ResponseBody, _impl_.send_batch_messages_response_),
        PROTOBUF_FIELD_OFFSET(::roc::im::sdk::net::ResponseBody, _impl_.push_messages_),
        ~0u,
        0,
        1,
        2,
        3,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::roc::im::sdk::net::Conversation_ExtEntry_DoNotUse)},
        {12, -1, -1, sizeof(::roc::im::sdk::net::Conversation)},
        {23, -1, -1, sizeof(::roc::im::sdk::net::CmdMessage)},
        {32, 42, -1, sizeof(::roc::im::sdk::net::ContentMessage_ExtEntry_DoNotUse)},
        {44, -1, -1, sizeof(::roc::im::sdk::net::ContentMessage)},
        {59, 70, -1, sizeof(::roc::im::sdk::net::Message)},
        {73, -1, -1, sizeof(::roc::im::sdk::net::ConversationMessages)},
        {83, -1, -1, sizeof(::roc::im::sdk::net::FetchSingleLinkMessagesReq)},
        {94, 103, -1, sizeof(::roc::im::sdk::net::FetchSingleLinkMessagesResp)},
        {104, -1, -1, sizeof(::roc::im::sdk::net::FetchMixedLinkMessagesReq)},
        {114, -1, -1, sizeof(::roc::im::sdk::net::FetchMixedLinkMessagesResp)},
        {123, -1, -1, sizeof(::roc::im::sdk::net::SendBatchMessageReq)},
        {132, -1, -1, sizeof(::roc::im::sdk::net::SendBatchMessageResp)},
        {141, -1, -1, sizeof(::roc::im::sdk::net::PushMessages)},
        {150, 163, -1, sizeof(::roc::im::sdk::net::RequestBody)},
        {168, 181, -1, sizeof(::roc::im::sdk::net::ResponseBody)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::roc::im::sdk::net::_Conversation_ExtEntry_DoNotUse_default_instance_._instance,
    &::roc::im::sdk::net::_Conversation_default_instance_._instance,
    &::roc::im::sdk::net::_CmdMessage_default_instance_._instance,
    &::roc::im::sdk::net::_ContentMessage_ExtEntry_DoNotUse_default_instance_._instance,
    &::roc::im::sdk::net::_ContentMessage_default_instance_._instance,
    &::roc::im::sdk::net::_Message_default_instance_._instance,
    &::roc::im::sdk::net::_ConversationMessages_default_instance_._instance,
    &::roc::im::sdk::net::_FetchSingleLinkMessagesReq_default_instance_._instance,
    &::roc::im::sdk::net::_FetchSingleLinkMessagesResp_default_instance_._instance,
    &::roc::im::sdk::net::_FetchMixedLinkMessagesReq_default_instance_._instance,
    &::roc::im::sdk::net::_FetchMixedLinkMessagesResp_default_instance_._instance,
    &::roc::im::sdk::net::_SendBatchMessageReq_default_instance_._instance,
    &::roc::im::sdk::net::_SendBatchMessageResp_default_instance_._instance,
    &::roc::im::sdk::net::_PushMessages_default_instance_._instance,
    &::roc::im::sdk::net::_RequestBody_default_instance_._instance,
    &::roc::im::sdk::net::_ResponseBody_default_instance_._instance,
};
const char descriptor_table_protodef_LCModel_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\rLCModel.proto\022\016roc.im.sdk.net\"\230\001\n\014Conv"
    "ersation\022\026\n\016convertsion_id\030\001 \001(\t\022\020\n\010owne"
    "r_id\030\002 \001(\t\0222\n\003ext\030\003 \003(\0132%.roc.im.sdk.net"
    ".Conversation.ExtEntry\032*\n\010ExtEntry\022\013\n\003ke"
    "y\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\031\n\nCmdMessage"
    "\022\013\n\003cmd\030\001 \001(\003\"\347\001\n\016ContentMessage\022\022\n\nmess"
    "age_id\030\001 \001(\t\022\017\n\007content\030\002 \001(\014\0224\n\003ext\030\003 \003"
    "(\0132\'.roc.im.sdk.net.ContentMessage.ExtEn"
    "try\022\021\n\tsender_id\030\004 \001(\t\022\026\n\016convertsion_id"
    "\030\005 \001(\t\022\024\n\014message_type\030\006 \001(\003\022\r\n\005index\030\007 "
    "\001(\003\032*\n\010ExtEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 "
    "\001(\t:\0028\001\"\200\001\n\007Message\022\r\n\005isCmd\030\001 \001(\010\022.\n\ncm"
    "dMessage\030\002 \001(\0132\032.roc.im.sdk.net.CmdMessa"
    "ge\0226\n\016contentMessage\030\003 \001(\0132\036.roc.im.sdk."
    "net.ContentMessage\"]\n\024ConversationMessag"
    "es\022\027\n\017conversation_id\030\001 \001(\t\022,\n\013message_a"
    "rr\030\002 \003(\0132\027.roc.im.sdk.net.Message\"[\n\032Fet"
    "chSingleLinkMessagesReq\022\027\n\017conversation_"
    "id\030\001 \001(\t\022\022\n\nfrom_index\030\002 \001(\003\022\020\n\010to_index"
    "\030\003 \001(\003\"b\n\033FetchSingleLinkMessagesResp\022C\n"
    "\025conversation_messages\030\001 \001(\0132$.roc.im.sd"
    "k.net.ConversationMessages\"G\n\031FetchMixed"
    "LinkMessagesReq\022\033\n\023conversation_id_arr\030\001"
    " \003(\t\022\r\n\005count\030\002 \001(\003\"a\n\032FetchMixedLinkMes"
    "sagesResp\022C\n\025conversation_messages\030\001 \003(\013"
    "2$.roc.im.sdk.net.ConversationMessages\"J"
    "\n\023SendBatchMessageReq\0223\n\013message_arr\030\001 \003"
    "(\0132\036.roc.im.sdk.net.ContentMessage\"_\n\024Se"
    "ndBatchMessageResp\022G\n\031send_message_respo"
    "nse_arr\030\001 \003(\0132$.roc.im.sdk.net.SendBatch"
    "MessageResp\"A\n\014PushMessages\0221\n\020push_mess"
    "age_arr\030\001 \003(\0132\027.roc.im.sdk.net.Message\"\246"
    "\002\n\013RequestBody\022\022\n\nrequest_id\030\001 \001(\t\022T\n!fe"
    "tch_mixed_link_messages_request\030\002 \001(\0132)."
    "roc.im.sdk.net.FetchMixedLinkMessagesReq"
    "\022V\n\"fetch_single_link_messages_request\030\003"
    " \001(\0132*.roc.im.sdk.net.FetchSingleLinkMes"
    "sagesReq\022H\n\033send_batch_messages_request\030"
    "\004 \001(\0132#.roc.im.sdk.net.SendBatchMessageR"
    "eq\022\013\n\003url\030\005 \001(\t\"\326\002\n\014ResponseBody\022\023\n\013resp"
    "onse_id\030\001 \001(\t\022V\n\"fetch_mixed_link_messag"
    "es_response\030\002 \001(\0132*.roc.im.sdk.net.Fetch"
    "MixedLinkMessagesResp\022X\n#fetch_single_li"
    "nk_messages_response\030\003 \001(\0132+.roc.im.sdk."
    "net.FetchSingleLinkMessagesResp\022J\n\034send_"
    "batch_messages_response\030\004 \001(\0132$.roc.im.s"
    "dk.net.SendBatchMessageResp\0223\n\rpush_mess"
    "ages\030\005 \001(\0132\034.roc.im.sdk.net.PushMessages"
    "B\025Z\005./;im\252\002\013IM.Protocolb\006proto3"
};
static ::absl::once_flag descriptor_table_LCModel_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_LCModel_2eproto = {
    false,
    false,
    1951,
    descriptor_table_protodef_LCModel_2eproto,
    "LCModel.proto",
    &descriptor_table_LCModel_2eproto_once,
    nullptr,
    0,
    16,
    schemas,
    file_default_instances,
    TableStruct_LCModel_2eproto::offsets,
    file_level_enum_descriptors_LCModel_2eproto,
    file_level_service_descriptors_LCModel_2eproto,
};
namespace roc {
namespace im {
namespace sdk {
namespace net {
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              Conversation_ExtEntry_DoNotUse::Conversation_ExtEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              Conversation_ExtEntry_DoNotUse::Conversation_ExtEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              Conversation_ExtEntry_DoNotUse::Conversation_ExtEntry_DoNotUse() : SuperType() {}
              Conversation_ExtEntry_DoNotUse::Conversation_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* Conversation_ExtEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) Conversation_ExtEntry_DoNotUse(arena);
              }
              constexpr auto Conversation_ExtEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Conversation_ExtEntry_DoNotUse),
                                                          alignof(Conversation_ExtEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull Conversation_ExtEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_Conversation_ExtEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &Conversation_ExtEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<Conversation_ExtEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &Conversation_ExtEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &Conversation_ExtEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(Conversation_ExtEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &Conversation_ExtEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_LCModel_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* Conversation_ExtEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 53, 2> Conversation_ExtEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Conversation_ExtEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::roc::im::sdk::net::Conversation_ExtEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Conversation_ExtEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Conversation_ExtEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(Conversation_ExtEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(Conversation_ExtEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\3\5\0\0\0\0\0"
    "roc.im.sdk.net.Conversation.ExtEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class Conversation::_Internal {
 public:
};

Conversation::Conversation(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:roc.im.sdk.net.Conversation)
}
inline PROTOBUF_NDEBUG_INLINE Conversation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::roc::im::sdk::net::Conversation& from_msg)
      : ext_{visibility, arena, from.ext_},
        convertsion_id_(arena, from.convertsion_id_),
        owner_id_(arena, from.owner_id_),
        _cached_size_{0} {}

Conversation::Conversation(
    ::google::protobuf::Arena* arena,
    const Conversation& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Conversation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:roc.im.sdk.net.Conversation)
}
inline PROTOBUF_NDEBUG_INLINE Conversation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : ext_{visibility, arena},
        convertsion_id_(arena),
        owner_id_(arena),
        _cached_size_{0} {}

inline void Conversation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Conversation::~Conversation() {
  // @@protoc_insertion_point(destructor:roc.im.sdk.net.Conversation)
  SharedDtor(*this);
}
inline void Conversation::SharedDtor(MessageLite& self) {
  Conversation& this_ = static_cast<Conversation&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.convertsion_id_.Destroy();
  this_._impl_.owner_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Conversation::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Conversation(arena);
}
constexpr auto Conversation::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Conversation, _impl_.ext_) +
          decltype(Conversation::_impl_.ext_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Conversation, _impl_.ext_) +
          decltype(Conversation::_impl_.ext_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Conversation), alignof(Conversation), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Conversation::PlacementNew_,
                                 sizeof(Conversation),
                                 alignof(Conversation));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Conversation::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Conversation_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Conversation::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Conversation>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Conversation::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Conversation>(), &Conversation::ByteSizeLong,
            &Conversation::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Conversation, _impl_._cached_size_),
        false,
    },
    &Conversation::kDescriptorMethods,
    &descriptor_table_LCModel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Conversation::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 3, 1, 61, 2> Conversation::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::roc::im::sdk::net::Conversation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string owner_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Conversation, _impl_.owner_id_)}},
    // string convertsion_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Conversation, _impl_.convertsion_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string convertsion_id = 1;
    {PROTOBUF_FIELD_OFFSET(Conversation, _impl_.convertsion_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string owner_id = 2;
    {PROTOBUF_FIELD_OFFSET(Conversation, _impl_.owner_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> ext = 3;
    {PROTOBUF_FIELD_OFFSET(Conversation, _impl_.ext_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(Conversation()._impl_.ext_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\33\16\10\3\0\0\0\0"
    "roc.im.sdk.net.Conversation"
    "convertsion_id"
    "owner_id"
    "ext"
  }},
};

PROTOBUF_NOINLINE void Conversation::Clear() {
// @@protoc_insertion_point(message_clear_start:roc.im.sdk.net.Conversation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ext_.Clear();
  _impl_.convertsion_id_.ClearToEmpty();
  _impl_.owner_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Conversation::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Conversation& this_ = static_cast<const Conversation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Conversation::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Conversation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:roc.im.sdk.net.Conversation)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string convertsion_id = 1;
          if (!this_._internal_convertsion_id().empty()) {
            const std::string& _s = this_._internal_convertsion_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "roc.im.sdk.net.Conversation.convertsion_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string owner_id = 2;
          if (!this_._internal_owner_id().empty()) {
            const std::string& _s = this_._internal_owner_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "roc.im.sdk.net.Conversation.owner_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // map<string, string> ext = 3;
          if (!this_._internal_ext().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_ext();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "roc.im.sdk.net.Conversation.ext");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "roc.im.sdk.net.Conversation.ext");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "roc.im.sdk.net.Conversation.ext");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "roc.im.sdk.net.Conversation.ext");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:roc.im.sdk.net.Conversation)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Conversation::ByteSizeLong(const MessageLite& base) {
          const Conversation& this_ = static_cast<const Conversation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Conversation::ByteSizeLong() const {
          const Conversation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:roc.im.sdk.net.Conversation)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> ext = 3;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_ext_size());
              for (const auto& entry : this_._internal_ext()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string convertsion_id = 1;
            if (!this_._internal_convertsion_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_convertsion_id());
            }
            // string owner_id = 2;
            if (!this_._internal_owner_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_owner_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Conversation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Conversation*>(&to_msg);
  auto& from = static_cast<const Conversation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:roc.im.sdk.net.Conversation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.ext_.MergeFrom(from._impl_.ext_);
  if (!from._internal_convertsion_id().empty()) {
    _this->_internal_set_convertsion_id(from._internal_convertsion_id());
  }
  if (!from._internal_owner_id().empty()) {
    _this->_internal_set_owner_id(from._internal_owner_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Conversation::CopyFrom(const Conversation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roc.im.sdk.net.Conversation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Conversation::InternalSwap(Conversation* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.ext_.InternalSwap(&other->_impl_.ext_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.convertsion_id_, &other->_impl_.convertsion_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_id_, &other->_impl_.owner_id_, arena);
}

::google::protobuf::Metadata Conversation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CmdMessage::_Internal {
 public:
};

CmdMessage::CmdMessage(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:roc.im.sdk.net.CmdMessage)
}
CmdMessage::CmdMessage(
    ::google::protobuf::Arena* arena, const CmdMessage& from)
    : CmdMessage(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CmdMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CmdMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.cmd_ = {};
}
CmdMessage::~CmdMessage() {
  // @@protoc_insertion_point(destructor:roc.im.sdk.net.CmdMessage)
  SharedDtor(*this);
}
inline void CmdMessage::SharedDtor(MessageLite& self) {
  CmdMessage& this_ = static_cast<CmdMessage&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* CmdMessage::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CmdMessage(arena);
}
constexpr auto CmdMessage::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CmdMessage),
                                            alignof(CmdMessage));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CmdMessage::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CmdMessage_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CmdMessage::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CmdMessage>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CmdMessage::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CmdMessage>(), &CmdMessage::ByteSizeLong,
            &CmdMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CmdMessage, _impl_._cached_size_),
        false,
    },
    &CmdMessage::kDescriptorMethods,
    &descriptor_table_LCModel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CmdMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CmdMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::roc::im::sdk::net::CmdMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 cmd = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CmdMessage, _impl_.cmd_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CmdMessage, _impl_.cmd_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 cmd = 1;
    {PROTOBUF_FIELD_OFFSET(CmdMessage, _impl_.cmd_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CmdMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:roc.im.sdk.net.CmdMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cmd_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CmdMessage::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CmdMessage& this_ = static_cast<const CmdMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CmdMessage::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CmdMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:roc.im.sdk.net.CmdMessage)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 cmd = 1;
          if (this_._internal_cmd() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_cmd(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:roc.im.sdk.net.CmdMessage)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CmdMessage::ByteSizeLong(const MessageLite& base) {
          const CmdMessage& this_ = static_cast<const CmdMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CmdMessage::ByteSizeLong() const {
          const CmdMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:roc.im.sdk.net.CmdMessage)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // int64 cmd = 1;
            if (this_._internal_cmd() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_cmd());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CmdMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CmdMessage*>(&to_msg);
  auto& from = static_cast<const CmdMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:roc.im.sdk.net.CmdMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_cmd() != 0) {
    _this->_impl_.cmd_ = from._impl_.cmd_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CmdMessage::CopyFrom(const CmdMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roc.im.sdk.net.CmdMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CmdMessage::InternalSwap(CmdMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.cmd_, other->_impl_.cmd_);
}

::google::protobuf::Metadata CmdMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              ContentMessage_ExtEntry_DoNotUse::ContentMessage_ExtEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              ContentMessage_ExtEntry_DoNotUse::ContentMessage_ExtEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              ContentMessage_ExtEntry_DoNotUse::ContentMessage_ExtEntry_DoNotUse() : SuperType() {}
              ContentMessage_ExtEntry_DoNotUse::ContentMessage_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* ContentMessage_ExtEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) ContentMessage_ExtEntry_DoNotUse(arena);
              }
              constexpr auto ContentMessage_ExtEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ContentMessage_ExtEntry_DoNotUse),
                                                          alignof(ContentMessage_ExtEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull ContentMessage_ExtEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_ContentMessage_ExtEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &ContentMessage_ExtEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<ContentMessage_ExtEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &ContentMessage_ExtEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &ContentMessage_ExtEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(ContentMessage_ExtEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &ContentMessage_ExtEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_LCModel_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* ContentMessage_ExtEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 55, 2> ContentMessage_ExtEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ContentMessage_ExtEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::roc::im::sdk::net::ContentMessage_ExtEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ContentMessage_ExtEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ContentMessage_ExtEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(ContentMessage_ExtEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(ContentMessage_ExtEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\46\3\5\0\0\0\0\0"
    "roc.im.sdk.net.ContentMessage.ExtEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class ContentMessage::_Internal {
 public:
};

ContentMessage::ContentMessage(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:roc.im.sdk.net.ContentMessage)
}
inline PROTOBUF_NDEBUG_INLINE ContentMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::roc::im::sdk::net::ContentMessage& from_msg)
      : ext_{visibility, arena, from.ext_},
        message_id_(arena, from.message_id_),
        content_(arena, from.content_),
        sender_id_(arena, from.sender_id_),
        convertsion_id_(arena, from.convertsion_id_),
        _cached_size_{0} {}

ContentMessage::ContentMessage(
    ::google::protobuf::Arena* arena,
    const ContentMessage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ContentMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, message_type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, message_type_),
           offsetof(Impl_, index_) -
               offsetof(Impl_, message_type_) +
               sizeof(Impl_::index_));

  // @@protoc_insertion_point(copy_constructor:roc.im.sdk.net.ContentMessage)
}
inline PROTOBUF_NDEBUG_INLINE ContentMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : ext_{visibility, arena},
        message_id_(arena),
        content_(arena),
        sender_id_(arena),
        convertsion_id_(arena),
        _cached_size_{0} {}

inline void ContentMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, message_type_),
           0,
           offsetof(Impl_, index_) -
               offsetof(Impl_, message_type_) +
               sizeof(Impl_::index_));
}
ContentMessage::~ContentMessage() {
  // @@protoc_insertion_point(destructor:roc.im.sdk.net.ContentMessage)
  SharedDtor(*this);
}
inline void ContentMessage::SharedDtor(MessageLite& self) {
  ContentMessage& this_ = static_cast<ContentMessage&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_id_.Destroy();
  this_._impl_.content_.Destroy();
  this_._impl_.sender_id_.Destroy();
  this_._impl_.convertsion_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ContentMessage::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ContentMessage(arena);
}
constexpr auto ContentMessage::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ContentMessage, _impl_.ext_) +
          decltype(ContentMessage::_impl_.ext_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ContentMessage, _impl_.ext_) +
          decltype(ContentMessage::_impl_.ext_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ContentMessage), alignof(ContentMessage), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ContentMessage::PlacementNew_,
                                 sizeof(ContentMessage),
                                 alignof(ContentMessage));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ContentMessage::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ContentMessage_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ContentMessage::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ContentMessage>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ContentMessage::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ContentMessage>(), &ContentMessage::ByteSizeLong,
            &ContentMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ContentMessage, _impl_._cached_size_),
        false,
    },
    &ContentMessage::kDescriptorMethods,
    &descriptor_table_LCModel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ContentMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 74, 2> ContentMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::roc::im::sdk::net::ContentMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string message_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ContentMessage, _impl_.message_id_)}},
    // bytes content = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ContentMessage, _impl_.content_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string sender_id = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ContentMessage, _impl_.sender_id_)}},
    // string convertsion_id = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(ContentMessage, _impl_.convertsion_id_)}},
    // int64 message_type = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ContentMessage, _impl_.message_type_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(ContentMessage, _impl_.message_type_)}},
    // int64 index = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ContentMessage, _impl_.index_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(ContentMessage, _impl_.index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string message_id = 1;
    {PROTOBUF_FIELD_OFFSET(ContentMessage, _impl_.message_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes content = 2;
    {PROTOBUF_FIELD_OFFSET(ContentMessage, _impl_.content_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // map<string, string> ext = 3;
    {PROTOBUF_FIELD_OFFSET(ContentMessage, _impl_.ext_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string sender_id = 4;
    {PROTOBUF_FIELD_OFFSET(ContentMessage, _impl_.sender_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string convertsion_id = 5;
    {PROTOBUF_FIELD_OFFSET(ContentMessage, _impl_.convertsion_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 message_type = 6;
    {PROTOBUF_FIELD_OFFSET(ContentMessage, _impl_.message_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 index = 7;
    {PROTOBUF_FIELD_OFFSET(ContentMessage, _impl_.index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ContentMessage()._impl_.ext_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\35\12\0\3\11\16\0\0"
    "roc.im.sdk.net.ContentMessage"
    "message_id"
    "ext"
    "sender_id"
    "convertsion_id"
  }},
};

PROTOBUF_NOINLINE void ContentMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:roc.im.sdk.net.ContentMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ext_.Clear();
  _impl_.message_id_.ClearToEmpty();
  _impl_.content_.ClearToEmpty();
  _impl_.sender_id_.ClearToEmpty();
  _impl_.convertsion_id_.ClearToEmpty();
  ::memset(&_impl_.message_type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.index_) -
      reinterpret_cast<char*>(&_impl_.message_type_)) + sizeof(_impl_.index_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ContentMessage::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ContentMessage& this_ = static_cast<const ContentMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ContentMessage::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ContentMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:roc.im.sdk.net.ContentMessage)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string message_id = 1;
          if (!this_._internal_message_id().empty()) {
            const std::string& _s = this_._internal_message_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "roc.im.sdk.net.ContentMessage.message_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // bytes content = 2;
          if (!this_._internal_content().empty()) {
            const std::string& _s = this_._internal_content();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          // map<string, string> ext = 3;
          if (!this_._internal_ext().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_ext();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "roc.im.sdk.net.ContentMessage.ext");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "roc.im.sdk.net.ContentMessage.ext");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "roc.im.sdk.net.ContentMessage.ext");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "roc.im.sdk.net.ContentMessage.ext");
              }
            }
          }

          // string sender_id = 4;
          if (!this_._internal_sender_id().empty()) {
            const std::string& _s = this_._internal_sender_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "roc.im.sdk.net.ContentMessage.sender_id");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string convertsion_id = 5;
          if (!this_._internal_convertsion_id().empty()) {
            const std::string& _s = this_._internal_convertsion_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "roc.im.sdk.net.ContentMessage.convertsion_id");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // int64 message_type = 6;
          if (this_._internal_message_type() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<6>(
                    stream, this_._internal_message_type(), target);
          }

          // int64 index = 7;
          if (this_._internal_index() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<7>(
                    stream, this_._internal_index(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:roc.im.sdk.net.ContentMessage)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ContentMessage::ByteSizeLong(const MessageLite& base) {
          const ContentMessage& this_ = static_cast<const ContentMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ContentMessage::ByteSizeLong() const {
          const ContentMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:roc.im.sdk.net.ContentMessage)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> ext = 3;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_ext_size());
              for (const auto& entry : this_._internal_ext()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string message_id = 1;
            if (!this_._internal_message_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message_id());
            }
            // bytes content = 2;
            if (!this_._internal_content().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_content());
            }
            // string sender_id = 4;
            if (!this_._internal_sender_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_sender_id());
            }
            // string convertsion_id = 5;
            if (!this_._internal_convertsion_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_convertsion_id());
            }
            // int64 message_type = 6;
            if (this_._internal_message_type() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_message_type());
            }
            // int64 index = 7;
            if (this_._internal_index() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_index());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ContentMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ContentMessage*>(&to_msg);
  auto& from = static_cast<const ContentMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:roc.im.sdk.net.ContentMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.ext_.MergeFrom(from._impl_.ext_);
  if (!from._internal_message_id().empty()) {
    _this->_internal_set_message_id(from._internal_message_id());
  }
  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  if (!from._internal_sender_id().empty()) {
    _this->_internal_set_sender_id(from._internal_sender_id());
  }
  if (!from._internal_convertsion_id().empty()) {
    _this->_internal_set_convertsion_id(from._internal_convertsion_id());
  }
  if (from._internal_message_type() != 0) {
    _this->_impl_.message_type_ = from._impl_.message_type_;
  }
  if (from._internal_index() != 0) {
    _this->_impl_.index_ = from._impl_.index_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ContentMessage::CopyFrom(const ContentMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roc.im.sdk.net.ContentMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ContentMessage::InternalSwap(ContentMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.ext_.InternalSwap(&other->_impl_.ext_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_id_, &other->_impl_.message_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, &other->_impl_.content_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_id_, &other->_impl_.sender_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.convertsion_id_, &other->_impl_.convertsion_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ContentMessage, _impl_.index_)
      + sizeof(ContentMessage::_impl_.index_)
      - PROTOBUF_FIELD_OFFSET(ContentMessage, _impl_.message_type_)>(
          reinterpret_cast<char*>(&_impl_.message_type_),
          reinterpret_cast<char*>(&other->_impl_.message_type_));
}

::google::protobuf::Metadata ContentMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Message>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Message, _impl_._has_bits_);
};

Message::Message(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:roc.im.sdk.net.Message)
}
inline PROTOBUF_NDEBUG_INLINE Message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::roc::im::sdk::net::Message& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Message::Message(
    ::google::protobuf::Arena* arena,
    const Message& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Message* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.cmdmessage_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::roc::im::sdk::net::CmdMessage>(
                              arena, *from._impl_.cmdmessage_)
                        : nullptr;
  _impl_.contentmessage_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::roc::im::sdk::net::ContentMessage>(
                              arena, *from._impl_.contentmessage_)
                        : nullptr;
  _impl_.iscmd_ = from._impl_.iscmd_;

  // @@protoc_insertion_point(copy_constructor:roc.im.sdk.net.Message)
}
inline PROTOBUF_NDEBUG_INLINE Message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cmdmessage_),
           0,
           offsetof(Impl_, iscmd_) -
               offsetof(Impl_, cmdmessage_) +
               sizeof(Impl_::iscmd_));
}
Message::~Message() {
  // @@protoc_insertion_point(destructor:roc.im.sdk.net.Message)
  SharedDtor(*this);
}
inline void Message::SharedDtor(MessageLite& self) {
  Message& this_ = static_cast<Message&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.cmdmessage_;
  delete this_._impl_.contentmessage_;
  this_._impl_.~Impl_();
}

inline void* Message::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Message(arena);
}
constexpr auto Message::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Message),
                                            alignof(Message));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Message::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Message_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Message::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Message>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Message::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Message>(), &Message::ByteSizeLong,
            &Message::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Message, _impl_._cached_size_),
        false,
    },
    &Message::kDescriptorMethods,
    &descriptor_table_LCModel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Message::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> Message::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::roc::im::sdk::net::Message>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool isCmd = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Message, _impl_.iscmd_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.iscmd_)}},
    // .roc.im.sdk.net.CmdMessage cmdMessage = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.cmdmessage_)}},
    // .roc.im.sdk.net.ContentMessage contentMessage = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(Message, _impl_.contentmessage_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool isCmd = 1;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.iscmd_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .roc.im.sdk.net.CmdMessage cmdMessage = 2;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.cmdmessage_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .roc.im.sdk.net.ContentMessage contentMessage = 3;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.contentmessage_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::roc::im::sdk::net::CmdMessage>()},
    {::_pbi::TcParser::GetTable<::roc::im::sdk::net::ContentMessage>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:roc.im.sdk.net.Message)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.cmdmessage_ != nullptr);
      _impl_.cmdmessage_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.contentmessage_ != nullptr);
      _impl_.contentmessage_->Clear();
    }
  }
  _impl_.iscmd_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Message::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Message& this_ = static_cast<const Message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Message::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:roc.im.sdk.net.Message)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool isCmd = 1;
          if (this_._internal_iscmd() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_iscmd(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .roc.im.sdk.net.CmdMessage cmdMessage = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.cmdmessage_, this_._impl_.cmdmessage_->GetCachedSize(), target,
                stream);
          }

          // .roc.im.sdk.net.ContentMessage contentMessage = 3;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.contentmessage_, this_._impl_.contentmessage_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:roc.im.sdk.net.Message)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Message::ByteSizeLong(const MessageLite& base) {
          const Message& this_ = static_cast<const Message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Message::ByteSizeLong() const {
          const Message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:roc.im.sdk.net.Message)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .roc.im.sdk.net.CmdMessage cmdMessage = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.cmdmessage_);
            }
            // .roc.im.sdk.net.ContentMessage contentMessage = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.contentmessage_);
            }
          }
           {
            // bool isCmd = 1;
            if (this_._internal_iscmd() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Message::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message*>(&to_msg);
  auto& from = static_cast<const Message&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:roc.im.sdk.net.Message)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.cmdmessage_ != nullptr);
      if (_this->_impl_.cmdmessage_ == nullptr) {
        _this->_impl_.cmdmessage_ =
            ::google::protobuf::Message::CopyConstruct<::roc::im::sdk::net::CmdMessage>(arena, *from._impl_.cmdmessage_);
      } else {
        _this->_impl_.cmdmessage_->MergeFrom(*from._impl_.cmdmessage_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.contentmessage_ != nullptr);
      if (_this->_impl_.contentmessage_ == nullptr) {
        _this->_impl_.contentmessage_ =
            ::google::protobuf::Message::CopyConstruct<::roc::im::sdk::net::ContentMessage>(arena, *from._impl_.contentmessage_);
      } else {
        _this->_impl_.contentmessage_->MergeFrom(*from._impl_.contentmessage_);
      }
    }
  }
  if (from._internal_iscmd() != 0) {
    _this->_impl_.iscmd_ = from._impl_.iscmd_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roc.im.sdk.net.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Message::InternalSwap(Message* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message, _impl_.iscmd_)
      + sizeof(Message::_impl_.iscmd_)
      - PROTOBUF_FIELD_OFFSET(Message, _impl_.cmdmessage_)>(
          reinterpret_cast<char*>(&_impl_.cmdmessage_),
          reinterpret_cast<char*>(&other->_impl_.cmdmessage_));
}

::google::protobuf::Metadata Message::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ConversationMessages::_Internal {
 public:
};

ConversationMessages::ConversationMessages(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:roc.im.sdk.net.ConversationMessages)
}
inline PROTOBUF_NDEBUG_INLINE ConversationMessages::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::roc::im::sdk::net::ConversationMessages& from_msg)
      : message_arr_{visibility, arena, from.message_arr_},
        conversation_id_(arena, from.conversation_id_),
        _cached_size_{0} {}

ConversationMessages::ConversationMessages(
    ::google::protobuf::Arena* arena,
    const ConversationMessages& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ConversationMessages* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:roc.im.sdk.net.ConversationMessages)
}
inline PROTOBUF_NDEBUG_INLINE ConversationMessages::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_arr_{visibility, arena},
        conversation_id_(arena),
        _cached_size_{0} {}

inline void ConversationMessages::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ConversationMessages::~ConversationMessages() {
  // @@protoc_insertion_point(destructor:roc.im.sdk.net.ConversationMessages)
  SharedDtor(*this);
}
inline void ConversationMessages::SharedDtor(MessageLite& self) {
  ConversationMessages& this_ = static_cast<ConversationMessages&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.conversation_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ConversationMessages::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ConversationMessages(arena);
}
constexpr auto ConversationMessages::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ConversationMessages, _impl_.message_arr_) +
          decltype(ConversationMessages::_impl_.message_arr_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ConversationMessages), alignof(ConversationMessages), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ConversationMessages::PlacementNew_,
                                 sizeof(ConversationMessages),
                                 alignof(ConversationMessages));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ConversationMessages::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ConversationMessages_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ConversationMessages::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ConversationMessages>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ConversationMessages::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ConversationMessages>(), &ConversationMessages::ByteSizeLong,
            &ConversationMessages::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ConversationMessages, _impl_._cached_size_),
        false,
    },
    &ConversationMessages::kDescriptorMethods,
    &descriptor_table_LCModel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ConversationMessages::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 59, 2> ConversationMessages::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::roc::im::sdk::net::ConversationMessages>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .roc.im.sdk.net.Message message_arr = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ConversationMessages, _impl_.message_arr_)}},
    // string conversation_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ConversationMessages, _impl_.conversation_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string conversation_id = 1;
    {PROTOBUF_FIELD_OFFSET(ConversationMessages, _impl_.conversation_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .roc.im.sdk.net.Message message_arr = 2;
    {PROTOBUF_FIELD_OFFSET(ConversationMessages, _impl_.message_arr_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::roc::im::sdk::net::Message>()},
  }}, {{
    "\43\17\0\0\0\0\0\0"
    "roc.im.sdk.net.ConversationMessages"
    "conversation_id"
  }},
};

PROTOBUF_NOINLINE void ConversationMessages::Clear() {
// @@protoc_insertion_point(message_clear_start:roc.im.sdk.net.ConversationMessages)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_arr_.Clear();
  _impl_.conversation_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ConversationMessages::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ConversationMessages& this_ = static_cast<const ConversationMessages&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ConversationMessages::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ConversationMessages& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:roc.im.sdk.net.ConversationMessages)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string conversation_id = 1;
          if (!this_._internal_conversation_id().empty()) {
            const std::string& _s = this_._internal_conversation_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "roc.im.sdk.net.ConversationMessages.conversation_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .roc.im.sdk.net.Message message_arr = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_message_arr_size());
               i < n; i++) {
            const auto& repfield = this_._internal_message_arr().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:roc.im.sdk.net.ConversationMessages)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ConversationMessages::ByteSizeLong(const MessageLite& base) {
          const ConversationMessages& this_ = static_cast<const ConversationMessages&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ConversationMessages::ByteSizeLong() const {
          const ConversationMessages& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:roc.im.sdk.net.ConversationMessages)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .roc.im.sdk.net.Message message_arr = 2;
            {
              total_size += 1UL * this_._internal_message_arr_size();
              for (const auto& msg : this_._internal_message_arr()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string conversation_id = 1;
            if (!this_._internal_conversation_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_conversation_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ConversationMessages::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ConversationMessages*>(&to_msg);
  auto& from = static_cast<const ConversationMessages&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:roc.im.sdk.net.ConversationMessages)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_message_arr()->MergeFrom(
      from._internal_message_arr());
  if (!from._internal_conversation_id().empty()) {
    _this->_internal_set_conversation_id(from._internal_conversation_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ConversationMessages::CopyFrom(const ConversationMessages& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roc.im.sdk.net.ConversationMessages)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ConversationMessages::InternalSwap(ConversationMessages* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.message_arr_.InternalSwap(&other->_impl_.message_arr_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.conversation_id_, &other->_impl_.conversation_id_, arena);
}

::google::protobuf::Metadata ConversationMessages::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FetchSingleLinkMessagesReq::_Internal {
 public:
};

FetchSingleLinkMessagesReq::FetchSingleLinkMessagesReq(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:roc.im.sdk.net.FetchSingleLinkMessagesReq)
}
inline PROTOBUF_NDEBUG_INLINE FetchSingleLinkMessagesReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::roc::im::sdk::net::FetchSingleLinkMessagesReq& from_msg)
      : conversation_id_(arena, from.conversation_id_),
        _cached_size_{0} {}

FetchSingleLinkMessagesReq::FetchSingleLinkMessagesReq(
    ::google::protobuf::Arena* arena,
    const FetchSingleLinkMessagesReq& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FetchSingleLinkMessagesReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, from_index_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, from_index_),
           offsetof(Impl_, to_index_) -
               offsetof(Impl_, from_index_) +
               sizeof(Impl_::to_index_));

  // @@protoc_insertion_point(copy_constructor:roc.im.sdk.net.FetchSingleLinkMessagesReq)
}
inline PROTOBUF_NDEBUG_INLINE FetchSingleLinkMessagesReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : conversation_id_(arena),
        _cached_size_{0} {}

inline void FetchSingleLinkMessagesReq::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, from_index_),
           0,
           offsetof(Impl_, to_index_) -
               offsetof(Impl_, from_index_) +
               sizeof(Impl_::to_index_));
}
FetchSingleLinkMessagesReq::~FetchSingleLinkMessagesReq() {
  // @@protoc_insertion_point(destructor:roc.im.sdk.net.FetchSingleLinkMessagesReq)
  SharedDtor(*this);
}
inline void FetchSingleLinkMessagesReq::SharedDtor(MessageLite& self) {
  FetchSingleLinkMessagesReq& this_ = static_cast<FetchSingleLinkMessagesReq&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.conversation_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* FetchSingleLinkMessagesReq::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) FetchSingleLinkMessagesReq(arena);
}
constexpr auto FetchSingleLinkMessagesReq::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(FetchSingleLinkMessagesReq),
                                            alignof(FetchSingleLinkMessagesReq));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull FetchSingleLinkMessagesReq::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_FetchSingleLinkMessagesReq_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &FetchSingleLinkMessagesReq::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<FetchSingleLinkMessagesReq>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &FetchSingleLinkMessagesReq::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<FetchSingleLinkMessagesReq>(), &FetchSingleLinkMessagesReq::ByteSizeLong,
            &FetchSingleLinkMessagesReq::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(FetchSingleLinkMessagesReq, _impl_._cached_size_),
        false,
    },
    &FetchSingleLinkMessagesReq::kDescriptorMethods,
    &descriptor_table_LCModel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* FetchSingleLinkMessagesReq::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 65, 2> FetchSingleLinkMessagesReq::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::roc::im::sdk::net::FetchSingleLinkMessagesReq>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string conversation_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(FetchSingleLinkMessagesReq, _impl_.conversation_id_)}},
    // int64 from_index = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(FetchSingleLinkMessagesReq, _impl_.from_index_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(FetchSingleLinkMessagesReq, _impl_.from_index_)}},
    // int64 to_index = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(FetchSingleLinkMessagesReq, _impl_.to_index_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(FetchSingleLinkMessagesReq, _impl_.to_index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string conversation_id = 1;
    {PROTOBUF_FIELD_OFFSET(FetchSingleLinkMessagesReq, _impl_.conversation_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 from_index = 2;
    {PROTOBUF_FIELD_OFFSET(FetchSingleLinkMessagesReq, _impl_.from_index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 to_index = 3;
    {PROTOBUF_FIELD_OFFSET(FetchSingleLinkMessagesReq, _impl_.to_index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\51\17\0\0\0\0\0\0"
    "roc.im.sdk.net.FetchSingleLinkMessagesReq"
    "conversation_id"
  }},
};

PROTOBUF_NOINLINE void FetchSingleLinkMessagesReq::Clear() {
// @@protoc_insertion_point(message_clear_start:roc.im.sdk.net.FetchSingleLinkMessagesReq)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.conversation_id_.ClearToEmpty();
  ::memset(&_impl_.from_index_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.to_index_) -
      reinterpret_cast<char*>(&_impl_.from_index_)) + sizeof(_impl_.to_index_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* FetchSingleLinkMessagesReq::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const FetchSingleLinkMessagesReq& this_ = static_cast<const FetchSingleLinkMessagesReq&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* FetchSingleLinkMessagesReq::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const FetchSingleLinkMessagesReq& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:roc.im.sdk.net.FetchSingleLinkMessagesReq)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string conversation_id = 1;
          if (!this_._internal_conversation_id().empty()) {
            const std::string& _s = this_._internal_conversation_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "roc.im.sdk.net.FetchSingleLinkMessagesReq.conversation_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int64 from_index = 2;
          if (this_._internal_from_index() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_from_index(), target);
          }

          // int64 to_index = 3;
          if (this_._internal_to_index() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_to_index(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:roc.im.sdk.net.FetchSingleLinkMessagesReq)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t FetchSingleLinkMessagesReq::ByteSizeLong(const MessageLite& base) {
          const FetchSingleLinkMessagesReq& this_ = static_cast<const FetchSingleLinkMessagesReq&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t FetchSingleLinkMessagesReq::ByteSizeLong() const {
          const FetchSingleLinkMessagesReq& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:roc.im.sdk.net.FetchSingleLinkMessagesReq)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string conversation_id = 1;
            if (!this_._internal_conversation_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_conversation_id());
            }
            // int64 from_index = 2;
            if (this_._internal_from_index() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_from_index());
            }
            // int64 to_index = 3;
            if (this_._internal_to_index() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_to_index());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void FetchSingleLinkMessagesReq::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FetchSingleLinkMessagesReq*>(&to_msg);
  auto& from = static_cast<const FetchSingleLinkMessagesReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:roc.im.sdk.net.FetchSingleLinkMessagesReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_conversation_id().empty()) {
    _this->_internal_set_conversation_id(from._internal_conversation_id());
  }
  if (from._internal_from_index() != 0) {
    _this->_impl_.from_index_ = from._impl_.from_index_;
  }
  if (from._internal_to_index() != 0) {
    _this->_impl_.to_index_ = from._impl_.to_index_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FetchSingleLinkMessagesReq::CopyFrom(const FetchSingleLinkMessagesReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roc.im.sdk.net.FetchSingleLinkMessagesReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FetchSingleLinkMessagesReq::InternalSwap(FetchSingleLinkMessagesReq* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.conversation_id_, &other->_impl_.conversation_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FetchSingleLinkMessagesReq, _impl_.to_index_)
      + sizeof(FetchSingleLinkMessagesReq::_impl_.to_index_)
      - PROTOBUF_FIELD_OFFSET(FetchSingleLinkMessagesReq, _impl_.from_index_)>(
          reinterpret_cast<char*>(&_impl_.from_index_),
          reinterpret_cast<char*>(&other->_impl_.from_index_));
}

::google::protobuf::Metadata FetchSingleLinkMessagesReq::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FetchSingleLinkMessagesResp::_Internal {
 public:
  using HasBits =
      decltype(std::declval<FetchSingleLinkMessagesResp>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(FetchSingleLinkMessagesResp, _impl_._has_bits_);
};

FetchSingleLinkMessagesResp::FetchSingleLinkMessagesResp(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:roc.im.sdk.net.FetchSingleLinkMessagesResp)
}
inline PROTOBUF_NDEBUG_INLINE FetchSingleLinkMessagesResp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::roc::im::sdk::net::FetchSingleLinkMessagesResp& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

FetchSingleLinkMessagesResp::FetchSingleLinkMessagesResp(
    ::google::protobuf::Arena* arena,
    const FetchSingleLinkMessagesResp& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FetchSingleLinkMessagesResp* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.conversation_messages_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::roc::im::sdk::net::ConversationMessages>(
                              arena, *from._impl_.conversation_messages_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:roc.im.sdk.net.FetchSingleLinkMessagesResp)
}
inline PROTOBUF_NDEBUG_INLINE FetchSingleLinkMessagesResp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FetchSingleLinkMessagesResp::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.conversation_messages_ = {};
}
FetchSingleLinkMessagesResp::~FetchSingleLinkMessagesResp() {
  // @@protoc_insertion_point(destructor:roc.im.sdk.net.FetchSingleLinkMessagesResp)
  SharedDtor(*this);
}
inline void FetchSingleLinkMessagesResp::SharedDtor(MessageLite& self) {
  FetchSingleLinkMessagesResp& this_ = static_cast<FetchSingleLinkMessagesResp&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.conversation_messages_;
  this_._impl_.~Impl_();
}

inline void* FetchSingleLinkMessagesResp::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) FetchSingleLinkMessagesResp(arena);
}
constexpr auto FetchSingleLinkMessagesResp::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(FetchSingleLinkMessagesResp),
                                            alignof(FetchSingleLinkMessagesResp));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull FetchSingleLinkMessagesResp::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_FetchSingleLinkMessagesResp_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &FetchSingleLinkMessagesResp::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<FetchSingleLinkMessagesResp>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &FetchSingleLinkMessagesResp::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<FetchSingleLinkMessagesResp>(), &FetchSingleLinkMessagesResp::ByteSizeLong,
            &FetchSingleLinkMessagesResp::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(FetchSingleLinkMessagesResp, _impl_._cached_size_),
        false,
    },
    &FetchSingleLinkMessagesResp::kDescriptorMethods,
    &descriptor_table_LCModel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* FetchSingleLinkMessagesResp::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> FetchSingleLinkMessagesResp::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FetchSingleLinkMessagesResp, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::roc::im::sdk::net::FetchSingleLinkMessagesResp>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .roc.im.sdk.net.ConversationMessages conversation_messages = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(FetchSingleLinkMessagesResp, _impl_.conversation_messages_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .roc.im.sdk.net.ConversationMessages conversation_messages = 1;
    {PROTOBUF_FIELD_OFFSET(FetchSingleLinkMessagesResp, _impl_.conversation_messages_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::roc::im::sdk::net::ConversationMessages>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void FetchSingleLinkMessagesResp::Clear() {
// @@protoc_insertion_point(message_clear_start:roc.im.sdk.net.FetchSingleLinkMessagesResp)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.conversation_messages_ != nullptr);
    _impl_.conversation_messages_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* FetchSingleLinkMessagesResp::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const FetchSingleLinkMessagesResp& this_ = static_cast<const FetchSingleLinkMessagesResp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* FetchSingleLinkMessagesResp::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const FetchSingleLinkMessagesResp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:roc.im.sdk.net.FetchSingleLinkMessagesResp)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .roc.im.sdk.net.ConversationMessages conversation_messages = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.conversation_messages_, this_._impl_.conversation_messages_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:roc.im.sdk.net.FetchSingleLinkMessagesResp)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t FetchSingleLinkMessagesResp::ByteSizeLong(const MessageLite& base) {
          const FetchSingleLinkMessagesResp& this_ = static_cast<const FetchSingleLinkMessagesResp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t FetchSingleLinkMessagesResp::ByteSizeLong() const {
          const FetchSingleLinkMessagesResp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:roc.im.sdk.net.FetchSingleLinkMessagesResp)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .roc.im.sdk.net.ConversationMessages conversation_messages = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.conversation_messages_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void FetchSingleLinkMessagesResp::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FetchSingleLinkMessagesResp*>(&to_msg);
  auto& from = static_cast<const FetchSingleLinkMessagesResp&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:roc.im.sdk.net.FetchSingleLinkMessagesResp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.conversation_messages_ != nullptr);
    if (_this->_impl_.conversation_messages_ == nullptr) {
      _this->_impl_.conversation_messages_ =
          ::google::protobuf::Message::CopyConstruct<::roc::im::sdk::net::ConversationMessages>(arena, *from._impl_.conversation_messages_);
    } else {
      _this->_impl_.conversation_messages_->MergeFrom(*from._impl_.conversation_messages_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FetchSingleLinkMessagesResp::CopyFrom(const FetchSingleLinkMessagesResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roc.im.sdk.net.FetchSingleLinkMessagesResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FetchSingleLinkMessagesResp::InternalSwap(FetchSingleLinkMessagesResp* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.conversation_messages_, other->_impl_.conversation_messages_);
}

::google::protobuf::Metadata FetchSingleLinkMessagesResp::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FetchMixedLinkMessagesReq::_Internal {
 public:
};

FetchMixedLinkMessagesReq::FetchMixedLinkMessagesReq(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:roc.im.sdk.net.FetchMixedLinkMessagesReq)
}
inline PROTOBUF_NDEBUG_INLINE FetchMixedLinkMessagesReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::roc::im::sdk::net::FetchMixedLinkMessagesReq& from_msg)
      : conversation_id_arr_{visibility, arena, from.conversation_id_arr_},
        _cached_size_{0} {}

FetchMixedLinkMessagesReq::FetchMixedLinkMessagesReq(
    ::google::protobuf::Arena* arena,
    const FetchMixedLinkMessagesReq& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FetchMixedLinkMessagesReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.count_ = from._impl_.count_;

  // @@protoc_insertion_point(copy_constructor:roc.im.sdk.net.FetchMixedLinkMessagesReq)
}
inline PROTOBUF_NDEBUG_INLINE FetchMixedLinkMessagesReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : conversation_id_arr_{visibility, arena},
        _cached_size_{0} {}

inline void FetchMixedLinkMessagesReq::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.count_ = {};
}
FetchMixedLinkMessagesReq::~FetchMixedLinkMessagesReq() {
  // @@protoc_insertion_point(destructor:roc.im.sdk.net.FetchMixedLinkMessagesReq)
  SharedDtor(*this);
}
inline void FetchMixedLinkMessagesReq::SharedDtor(MessageLite& self) {
  FetchMixedLinkMessagesReq& this_ = static_cast<FetchMixedLinkMessagesReq&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* FetchMixedLinkMessagesReq::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) FetchMixedLinkMessagesReq(arena);
}
constexpr auto FetchMixedLinkMessagesReq::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(FetchMixedLinkMessagesReq, _impl_.conversation_id_arr_) +
          decltype(FetchMixedLinkMessagesReq::_impl_.conversation_id_arr_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(FetchMixedLinkMessagesReq), alignof(FetchMixedLinkMessagesReq), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&FetchMixedLinkMessagesReq::PlacementNew_,
                                 sizeof(FetchMixedLinkMessagesReq),
                                 alignof(FetchMixedLinkMessagesReq));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull FetchMixedLinkMessagesReq::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_FetchMixedLinkMessagesReq_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &FetchMixedLinkMessagesReq::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<FetchMixedLinkMessagesReq>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &FetchMixedLinkMessagesReq::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<FetchMixedLinkMessagesReq>(), &FetchMixedLinkMessagesReq::ByteSizeLong,
            &FetchMixedLinkMessagesReq::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(FetchMixedLinkMessagesReq, _impl_._cached_size_),
        false,
    },
    &FetchMixedLinkMessagesReq::kDescriptorMethods,
    &descriptor_table_LCModel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* FetchMixedLinkMessagesReq::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 68, 2> FetchMixedLinkMessagesReq::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::roc::im::sdk::net::FetchMixedLinkMessagesReq>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 count = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(FetchMixedLinkMessagesReq, _impl_.count_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(FetchMixedLinkMessagesReq, _impl_.count_)}},
    // repeated string conversation_id_arr = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(FetchMixedLinkMessagesReq, _impl_.conversation_id_arr_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string conversation_id_arr = 1;
    {PROTOBUF_FIELD_OFFSET(FetchMixedLinkMessagesReq, _impl_.conversation_id_arr_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // int64 count = 2;
    {PROTOBUF_FIELD_OFFSET(FetchMixedLinkMessagesReq, _impl_.count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\50\23\0\0\0\0\0\0"
    "roc.im.sdk.net.FetchMixedLinkMessagesReq"
    "conversation_id_arr"
  }},
};

PROTOBUF_NOINLINE void FetchMixedLinkMessagesReq::Clear() {
// @@protoc_insertion_point(message_clear_start:roc.im.sdk.net.FetchMixedLinkMessagesReq)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.conversation_id_arr_.Clear();
  _impl_.count_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* FetchMixedLinkMessagesReq::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const FetchMixedLinkMessagesReq& this_ = static_cast<const FetchMixedLinkMessagesReq&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* FetchMixedLinkMessagesReq::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const FetchMixedLinkMessagesReq& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:roc.im.sdk.net.FetchMixedLinkMessagesReq)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string conversation_id_arr = 1;
          for (int i = 0, n = this_._internal_conversation_id_arr_size(); i < n; ++i) {
            const auto& s = this_._internal_conversation_id_arr().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "roc.im.sdk.net.FetchMixedLinkMessagesReq.conversation_id_arr");
            target = stream->WriteString(1, s, target);
          }

          // int64 count = 2;
          if (this_._internal_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_count(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:roc.im.sdk.net.FetchMixedLinkMessagesReq)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t FetchMixedLinkMessagesReq::ByteSizeLong(const MessageLite& base) {
          const FetchMixedLinkMessagesReq& this_ = static_cast<const FetchMixedLinkMessagesReq&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t FetchMixedLinkMessagesReq::ByteSizeLong() const {
          const FetchMixedLinkMessagesReq& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:roc.im.sdk.net.FetchMixedLinkMessagesReq)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string conversation_id_arr = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_conversation_id_arr().size());
              for (int i = 0, n = this_._internal_conversation_id_arr().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_conversation_id_arr().Get(i));
              }
            }
          }
           {
            // int64 count = 2;
            if (this_._internal_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void FetchMixedLinkMessagesReq::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FetchMixedLinkMessagesReq*>(&to_msg);
  auto& from = static_cast<const FetchMixedLinkMessagesReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:roc.im.sdk.net.FetchMixedLinkMessagesReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_conversation_id_arr()->MergeFrom(from._internal_conversation_id_arr());
  if (from._internal_count() != 0) {
    _this->_impl_.count_ = from._impl_.count_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FetchMixedLinkMessagesReq::CopyFrom(const FetchMixedLinkMessagesReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roc.im.sdk.net.FetchMixedLinkMessagesReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FetchMixedLinkMessagesReq::InternalSwap(FetchMixedLinkMessagesReq* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.conversation_id_arr_.InternalSwap(&other->_impl_.conversation_id_arr_);
        swap(_impl_.count_, other->_impl_.count_);
}

::google::protobuf::Metadata FetchMixedLinkMessagesReq::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FetchMixedLinkMessagesResp::_Internal {
 public:
};

FetchMixedLinkMessagesResp::FetchMixedLinkMessagesResp(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:roc.im.sdk.net.FetchMixedLinkMessagesResp)
}
inline PROTOBUF_NDEBUG_INLINE FetchMixedLinkMessagesResp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::roc::im::sdk::net::FetchMixedLinkMessagesResp& from_msg)
      : conversation_messages_{visibility, arena, from.conversation_messages_},
        _cached_size_{0} {}

FetchMixedLinkMessagesResp::FetchMixedLinkMessagesResp(
    ::google::protobuf::Arena* arena,
    const FetchMixedLinkMessagesResp& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FetchMixedLinkMessagesResp* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:roc.im.sdk.net.FetchMixedLinkMessagesResp)
}
inline PROTOBUF_NDEBUG_INLINE FetchMixedLinkMessagesResp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : conversation_messages_{visibility, arena},
        _cached_size_{0} {}

inline void FetchMixedLinkMessagesResp::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
FetchMixedLinkMessagesResp::~FetchMixedLinkMessagesResp() {
  // @@protoc_insertion_point(destructor:roc.im.sdk.net.FetchMixedLinkMessagesResp)
  SharedDtor(*this);
}
inline void FetchMixedLinkMessagesResp::SharedDtor(MessageLite& self) {
  FetchMixedLinkMessagesResp& this_ = static_cast<FetchMixedLinkMessagesResp&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* FetchMixedLinkMessagesResp::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) FetchMixedLinkMessagesResp(arena);
}
constexpr auto FetchMixedLinkMessagesResp::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(FetchMixedLinkMessagesResp, _impl_.conversation_messages_) +
          decltype(FetchMixedLinkMessagesResp::_impl_.conversation_messages_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(FetchMixedLinkMessagesResp), alignof(FetchMixedLinkMessagesResp), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&FetchMixedLinkMessagesResp::PlacementNew_,
                                 sizeof(FetchMixedLinkMessagesResp),
                                 alignof(FetchMixedLinkMessagesResp));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull FetchMixedLinkMessagesResp::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_FetchMixedLinkMessagesResp_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &FetchMixedLinkMessagesResp::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<FetchMixedLinkMessagesResp>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &FetchMixedLinkMessagesResp::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<FetchMixedLinkMessagesResp>(), &FetchMixedLinkMessagesResp::ByteSizeLong,
            &FetchMixedLinkMessagesResp::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(FetchMixedLinkMessagesResp, _impl_._cached_size_),
        false,
    },
    &FetchMixedLinkMessagesResp::kDescriptorMethods,
    &descriptor_table_LCModel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* FetchMixedLinkMessagesResp::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> FetchMixedLinkMessagesResp::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::roc::im::sdk::net::FetchMixedLinkMessagesResp>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .roc.im.sdk.net.ConversationMessages conversation_messages = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(FetchMixedLinkMessagesResp, _impl_.conversation_messages_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .roc.im.sdk.net.ConversationMessages conversation_messages = 1;
    {PROTOBUF_FIELD_OFFSET(FetchMixedLinkMessagesResp, _impl_.conversation_messages_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::roc::im::sdk::net::ConversationMessages>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void FetchMixedLinkMessagesResp::Clear() {
// @@protoc_insertion_point(message_clear_start:roc.im.sdk.net.FetchMixedLinkMessagesResp)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.conversation_messages_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* FetchMixedLinkMessagesResp::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const FetchMixedLinkMessagesResp& this_ = static_cast<const FetchMixedLinkMessagesResp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* FetchMixedLinkMessagesResp::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const FetchMixedLinkMessagesResp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:roc.im.sdk.net.FetchMixedLinkMessagesResp)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .roc.im.sdk.net.ConversationMessages conversation_messages = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_conversation_messages_size());
               i < n; i++) {
            const auto& repfield = this_._internal_conversation_messages().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:roc.im.sdk.net.FetchMixedLinkMessagesResp)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t FetchMixedLinkMessagesResp::ByteSizeLong(const MessageLite& base) {
          const FetchMixedLinkMessagesResp& this_ = static_cast<const FetchMixedLinkMessagesResp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t FetchMixedLinkMessagesResp::ByteSizeLong() const {
          const FetchMixedLinkMessagesResp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:roc.im.sdk.net.FetchMixedLinkMessagesResp)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .roc.im.sdk.net.ConversationMessages conversation_messages = 1;
            {
              total_size += 1UL * this_._internal_conversation_messages_size();
              for (const auto& msg : this_._internal_conversation_messages()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void FetchMixedLinkMessagesResp::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FetchMixedLinkMessagesResp*>(&to_msg);
  auto& from = static_cast<const FetchMixedLinkMessagesResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:roc.im.sdk.net.FetchMixedLinkMessagesResp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_conversation_messages()->MergeFrom(
      from._internal_conversation_messages());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FetchMixedLinkMessagesResp::CopyFrom(const FetchMixedLinkMessagesResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roc.im.sdk.net.FetchMixedLinkMessagesResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FetchMixedLinkMessagesResp::InternalSwap(FetchMixedLinkMessagesResp* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.conversation_messages_.InternalSwap(&other->_impl_.conversation_messages_);
}

::google::protobuf::Metadata FetchMixedLinkMessagesResp::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SendBatchMessageReq::_Internal {
 public:
};

SendBatchMessageReq::SendBatchMessageReq(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:roc.im.sdk.net.SendBatchMessageReq)
}
inline PROTOBUF_NDEBUG_INLINE SendBatchMessageReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::roc::im::sdk::net::SendBatchMessageReq& from_msg)
      : message_arr_{visibility, arena, from.message_arr_},
        _cached_size_{0} {}

SendBatchMessageReq::SendBatchMessageReq(
    ::google::protobuf::Arena* arena,
    const SendBatchMessageReq& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SendBatchMessageReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:roc.im.sdk.net.SendBatchMessageReq)
}
inline PROTOBUF_NDEBUG_INLINE SendBatchMessageReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_arr_{visibility, arena},
        _cached_size_{0} {}

inline void SendBatchMessageReq::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SendBatchMessageReq::~SendBatchMessageReq() {
  // @@protoc_insertion_point(destructor:roc.im.sdk.net.SendBatchMessageReq)
  SharedDtor(*this);
}
inline void SendBatchMessageReq::SharedDtor(MessageLite& self) {
  SendBatchMessageReq& this_ = static_cast<SendBatchMessageReq&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SendBatchMessageReq::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SendBatchMessageReq(arena);
}
constexpr auto SendBatchMessageReq::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SendBatchMessageReq, _impl_.message_arr_) +
          decltype(SendBatchMessageReq::_impl_.message_arr_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SendBatchMessageReq), alignof(SendBatchMessageReq), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SendBatchMessageReq::PlacementNew_,
                                 sizeof(SendBatchMessageReq),
                                 alignof(SendBatchMessageReq));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SendBatchMessageReq::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SendBatchMessageReq_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SendBatchMessageReq::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SendBatchMessageReq>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SendBatchMessageReq::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SendBatchMessageReq>(), &SendBatchMessageReq::ByteSizeLong,
            &SendBatchMessageReq::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SendBatchMessageReq, _impl_._cached_size_),
        false,
    },
    &SendBatchMessageReq::kDescriptorMethods,
    &descriptor_table_LCModel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SendBatchMessageReq::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SendBatchMessageReq::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::roc::im::sdk::net::SendBatchMessageReq>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .roc.im.sdk.net.ContentMessage message_arr = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SendBatchMessageReq, _impl_.message_arr_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .roc.im.sdk.net.ContentMessage message_arr = 1;
    {PROTOBUF_FIELD_OFFSET(SendBatchMessageReq, _impl_.message_arr_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::roc::im::sdk::net::ContentMessage>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SendBatchMessageReq::Clear() {
// @@protoc_insertion_point(message_clear_start:roc.im.sdk.net.SendBatchMessageReq)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_arr_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SendBatchMessageReq::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SendBatchMessageReq& this_ = static_cast<const SendBatchMessageReq&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SendBatchMessageReq::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SendBatchMessageReq& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:roc.im.sdk.net.SendBatchMessageReq)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .roc.im.sdk.net.ContentMessage message_arr = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_message_arr_size());
               i < n; i++) {
            const auto& repfield = this_._internal_message_arr().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:roc.im.sdk.net.SendBatchMessageReq)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SendBatchMessageReq::ByteSizeLong(const MessageLite& base) {
          const SendBatchMessageReq& this_ = static_cast<const SendBatchMessageReq&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SendBatchMessageReq::ByteSizeLong() const {
          const SendBatchMessageReq& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:roc.im.sdk.net.SendBatchMessageReq)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .roc.im.sdk.net.ContentMessage message_arr = 1;
            {
              total_size += 1UL * this_._internal_message_arr_size();
              for (const auto& msg : this_._internal_message_arr()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SendBatchMessageReq::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SendBatchMessageReq*>(&to_msg);
  auto& from = static_cast<const SendBatchMessageReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:roc.im.sdk.net.SendBatchMessageReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_message_arr()->MergeFrom(
      from._internal_message_arr());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SendBatchMessageReq::CopyFrom(const SendBatchMessageReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roc.im.sdk.net.SendBatchMessageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SendBatchMessageReq::InternalSwap(SendBatchMessageReq* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.message_arr_.InternalSwap(&other->_impl_.message_arr_);
}

::google::protobuf::Metadata SendBatchMessageReq::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SendBatchMessageResp::_Internal {
 public:
};

SendBatchMessageResp::SendBatchMessageResp(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:roc.im.sdk.net.SendBatchMessageResp)
}
inline PROTOBUF_NDEBUG_INLINE SendBatchMessageResp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::roc::im::sdk::net::SendBatchMessageResp& from_msg)
      : send_message_response_arr_{visibility, arena, from.send_message_response_arr_},
        _cached_size_{0} {}

SendBatchMessageResp::SendBatchMessageResp(
    ::google::protobuf::Arena* arena,
    const SendBatchMessageResp& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SendBatchMessageResp* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:roc.im.sdk.net.SendBatchMessageResp)
}
inline PROTOBUF_NDEBUG_INLINE SendBatchMessageResp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : send_message_response_arr_{visibility, arena},
        _cached_size_{0} {}

inline void SendBatchMessageResp::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SendBatchMessageResp::~SendBatchMessageResp() {
  // @@protoc_insertion_point(destructor:roc.im.sdk.net.SendBatchMessageResp)
  SharedDtor(*this);
}
inline void SendBatchMessageResp::SharedDtor(MessageLite& self) {
  SendBatchMessageResp& this_ = static_cast<SendBatchMessageResp&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SendBatchMessageResp::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SendBatchMessageResp(arena);
}
constexpr auto SendBatchMessageResp::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SendBatchMessageResp, _impl_.send_message_response_arr_) +
          decltype(SendBatchMessageResp::_impl_.send_message_response_arr_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SendBatchMessageResp), alignof(SendBatchMessageResp), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SendBatchMessageResp::PlacementNew_,
                                 sizeof(SendBatchMessageResp),
                                 alignof(SendBatchMessageResp));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SendBatchMessageResp::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SendBatchMessageResp_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SendBatchMessageResp::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SendBatchMessageResp>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SendBatchMessageResp::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SendBatchMessageResp>(), &SendBatchMessageResp::ByteSizeLong,
            &SendBatchMessageResp::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SendBatchMessageResp, _impl_._cached_size_),
        false,
    },
    &SendBatchMessageResp::kDescriptorMethods,
    &descriptor_table_LCModel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SendBatchMessageResp::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SendBatchMessageResp::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::roc::im::sdk::net::SendBatchMessageResp>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .roc.im.sdk.net.SendBatchMessageResp send_message_response_arr = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SendBatchMessageResp, _impl_.send_message_response_arr_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .roc.im.sdk.net.SendBatchMessageResp send_message_response_arr = 1;
    {PROTOBUF_FIELD_OFFSET(SendBatchMessageResp, _impl_.send_message_response_arr_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::roc::im::sdk::net::SendBatchMessageResp>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SendBatchMessageResp::Clear() {
// @@protoc_insertion_point(message_clear_start:roc.im.sdk.net.SendBatchMessageResp)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.send_message_response_arr_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SendBatchMessageResp::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SendBatchMessageResp& this_ = static_cast<const SendBatchMessageResp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SendBatchMessageResp::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SendBatchMessageResp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:roc.im.sdk.net.SendBatchMessageResp)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .roc.im.sdk.net.SendBatchMessageResp send_message_response_arr = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_send_message_response_arr_size());
               i < n; i++) {
            const auto& repfield = this_._internal_send_message_response_arr().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:roc.im.sdk.net.SendBatchMessageResp)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SendBatchMessageResp::ByteSizeLong(const MessageLite& base) {
          const SendBatchMessageResp& this_ = static_cast<const SendBatchMessageResp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SendBatchMessageResp::ByteSizeLong() const {
          const SendBatchMessageResp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:roc.im.sdk.net.SendBatchMessageResp)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .roc.im.sdk.net.SendBatchMessageResp send_message_response_arr = 1;
            {
              total_size += 1UL * this_._internal_send_message_response_arr_size();
              for (const auto& msg : this_._internal_send_message_response_arr()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SendBatchMessageResp::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SendBatchMessageResp*>(&to_msg);
  auto& from = static_cast<const SendBatchMessageResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:roc.im.sdk.net.SendBatchMessageResp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_send_message_response_arr()->MergeFrom(
      from._internal_send_message_response_arr());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SendBatchMessageResp::CopyFrom(const SendBatchMessageResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roc.im.sdk.net.SendBatchMessageResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SendBatchMessageResp::InternalSwap(SendBatchMessageResp* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.send_message_response_arr_.InternalSwap(&other->_impl_.send_message_response_arr_);
}

::google::protobuf::Metadata SendBatchMessageResp::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PushMessages::_Internal {
 public:
};

PushMessages::PushMessages(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:roc.im.sdk.net.PushMessages)
}
inline PROTOBUF_NDEBUG_INLINE PushMessages::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::roc::im::sdk::net::PushMessages& from_msg)
      : push_message_arr_{visibility, arena, from.push_message_arr_},
        _cached_size_{0} {}

PushMessages::PushMessages(
    ::google::protobuf::Arena* arena,
    const PushMessages& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PushMessages* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:roc.im.sdk.net.PushMessages)
}
inline PROTOBUF_NDEBUG_INLINE PushMessages::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : push_message_arr_{visibility, arena},
        _cached_size_{0} {}

inline void PushMessages::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PushMessages::~PushMessages() {
  // @@protoc_insertion_point(destructor:roc.im.sdk.net.PushMessages)
  SharedDtor(*this);
}
inline void PushMessages::SharedDtor(MessageLite& self) {
  PushMessages& this_ = static_cast<PushMessages&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PushMessages::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PushMessages(arena);
}
constexpr auto PushMessages::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PushMessages, _impl_.push_message_arr_) +
          decltype(PushMessages::_impl_.push_message_arr_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(PushMessages), alignof(PushMessages), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PushMessages::PlacementNew_,
                                 sizeof(PushMessages),
                                 alignof(PushMessages));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PushMessages::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PushMessages_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PushMessages::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PushMessages>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PushMessages::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PushMessages>(), &PushMessages::ByteSizeLong,
            &PushMessages::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PushMessages, _impl_._cached_size_),
        false,
    },
    &PushMessages::kDescriptorMethods,
    &descriptor_table_LCModel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PushMessages::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> PushMessages::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::roc::im::sdk::net::PushMessages>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .roc.im.sdk.net.Message push_message_arr = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PushMessages, _impl_.push_message_arr_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .roc.im.sdk.net.Message push_message_arr = 1;
    {PROTOBUF_FIELD_OFFSET(PushMessages, _impl_.push_message_arr_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::roc::im::sdk::net::Message>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PushMessages::Clear() {
// @@protoc_insertion_point(message_clear_start:roc.im.sdk.net.PushMessages)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.push_message_arr_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PushMessages::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PushMessages& this_ = static_cast<const PushMessages&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PushMessages::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PushMessages& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:roc.im.sdk.net.PushMessages)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .roc.im.sdk.net.Message push_message_arr = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_push_message_arr_size());
               i < n; i++) {
            const auto& repfield = this_._internal_push_message_arr().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:roc.im.sdk.net.PushMessages)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PushMessages::ByteSizeLong(const MessageLite& base) {
          const PushMessages& this_ = static_cast<const PushMessages&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PushMessages::ByteSizeLong() const {
          const PushMessages& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:roc.im.sdk.net.PushMessages)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .roc.im.sdk.net.Message push_message_arr = 1;
            {
              total_size += 1UL * this_._internal_push_message_arr_size();
              for (const auto& msg : this_._internal_push_message_arr()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PushMessages::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PushMessages*>(&to_msg);
  auto& from = static_cast<const PushMessages&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:roc.im.sdk.net.PushMessages)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_push_message_arr()->MergeFrom(
      from._internal_push_message_arr());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PushMessages::CopyFrom(const PushMessages& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roc.im.sdk.net.PushMessages)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PushMessages::InternalSwap(PushMessages* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.push_message_arr_.InternalSwap(&other->_impl_.push_message_arr_);
}

::google::protobuf::Metadata PushMessages::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RequestBody::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RequestBody>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RequestBody, _impl_._has_bits_);
};

RequestBody::RequestBody(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:roc.im.sdk.net.RequestBody)
}
inline PROTOBUF_NDEBUG_INLINE RequestBody::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::roc::im::sdk::net::RequestBody& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        request_id_(arena, from.request_id_),
        url_(arena, from.url_) {}

RequestBody::RequestBody(
    ::google::protobuf::Arena* arena,
    const RequestBody& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RequestBody* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.fetch_mixed_link_messages_request_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::roc::im::sdk::net::FetchMixedLinkMessagesReq>(
                              arena, *from._impl_.fetch_mixed_link_messages_request_)
                        : nullptr;
  _impl_.fetch_single_link_messages_request_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::roc::im::sdk::net::FetchSingleLinkMessagesReq>(
                              arena, *from._impl_.fetch_single_link_messages_request_)
                        : nullptr;
  _impl_.send_batch_messages_request_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::roc::im::sdk::net::SendBatchMessageReq>(
                              arena, *from._impl_.send_batch_messages_request_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:roc.im.sdk.net.RequestBody)
}
inline PROTOBUF_NDEBUG_INLINE RequestBody::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        request_id_(arena),
        url_(arena) {}

inline void RequestBody::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, fetch_mixed_link_messages_request_),
           0,
           offsetof(Impl_, send_batch_messages_request_) -
               offsetof(Impl_, fetch_mixed_link_messages_request_) +
               sizeof(Impl_::send_batch_messages_request_));
}
RequestBody::~RequestBody() {
  // @@protoc_insertion_point(destructor:roc.im.sdk.net.RequestBody)
  SharedDtor(*this);
}
inline void RequestBody::SharedDtor(MessageLite& self) {
  RequestBody& this_ = static_cast<RequestBody&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.request_id_.Destroy();
  this_._impl_.url_.Destroy();
  delete this_._impl_.fetch_mixed_link_messages_request_;
  delete this_._impl_.fetch_single_link_messages_request_;
  delete this_._impl_.send_batch_messages_request_;
  this_._impl_.~Impl_();
}

inline void* RequestBody::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RequestBody(arena);
}
constexpr auto RequestBody::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RequestBody),
                                            alignof(RequestBody));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RequestBody::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RequestBody_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RequestBody::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RequestBody>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RequestBody::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RequestBody>(), &RequestBody::ByteSizeLong,
            &RequestBody::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RequestBody, _impl_._cached_size_),
        false,
    },
    &RequestBody::kDescriptorMethods,
    &descriptor_table_LCModel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RequestBody::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 48, 2> RequestBody::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RequestBody, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::roc::im::sdk::net::RequestBody>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string request_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RequestBody, _impl_.request_id_)}},
    // .roc.im.sdk.net.FetchMixedLinkMessagesReq fetch_mixed_link_messages_request = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(RequestBody, _impl_.fetch_mixed_link_messages_request_)}},
    // .roc.im.sdk.net.FetchSingleLinkMessagesReq fetch_single_link_messages_request = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(RequestBody, _impl_.fetch_single_link_messages_request_)}},
    // .roc.im.sdk.net.SendBatchMessageReq send_batch_messages_request = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 2, PROTOBUF_FIELD_OFFSET(RequestBody, _impl_.send_batch_messages_request_)}},
    // string url = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(RequestBody, _impl_.url_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string request_id = 1;
    {PROTOBUF_FIELD_OFFSET(RequestBody, _impl_.request_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .roc.im.sdk.net.FetchMixedLinkMessagesReq fetch_mixed_link_messages_request = 2;
    {PROTOBUF_FIELD_OFFSET(RequestBody, _impl_.fetch_mixed_link_messages_request_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .roc.im.sdk.net.FetchSingleLinkMessagesReq fetch_single_link_messages_request = 3;
    {PROTOBUF_FIELD_OFFSET(RequestBody, _impl_.fetch_single_link_messages_request_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .roc.im.sdk.net.SendBatchMessageReq send_batch_messages_request = 4;
    {PROTOBUF_FIELD_OFFSET(RequestBody, _impl_.send_batch_messages_request_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string url = 5;
    {PROTOBUF_FIELD_OFFSET(RequestBody, _impl_.url_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::roc::im::sdk::net::FetchMixedLinkMessagesReq>()},
    {::_pbi::TcParser::GetTable<::roc::im::sdk::net::FetchSingleLinkMessagesReq>()},
    {::_pbi::TcParser::GetTable<::roc::im::sdk::net::SendBatchMessageReq>()},
  }}, {{
    "\32\12\0\0\0\3\0\0"
    "roc.im.sdk.net.RequestBody"
    "request_id"
    "url"
  }},
};

PROTOBUF_NOINLINE void RequestBody::Clear() {
// @@protoc_insertion_point(message_clear_start:roc.im.sdk.net.RequestBody)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.request_id_.ClearToEmpty();
  _impl_.url_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.fetch_mixed_link_messages_request_ != nullptr);
      _impl_.fetch_mixed_link_messages_request_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.fetch_single_link_messages_request_ != nullptr);
      _impl_.fetch_single_link_messages_request_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.send_batch_messages_request_ != nullptr);
      _impl_.send_batch_messages_request_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RequestBody::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RequestBody& this_ = static_cast<const RequestBody&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RequestBody::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RequestBody& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:roc.im.sdk.net.RequestBody)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string request_id = 1;
          if (!this_._internal_request_id().empty()) {
            const std::string& _s = this_._internal_request_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "roc.im.sdk.net.RequestBody.request_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .roc.im.sdk.net.FetchMixedLinkMessagesReq fetch_mixed_link_messages_request = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.fetch_mixed_link_messages_request_, this_._impl_.fetch_mixed_link_messages_request_->GetCachedSize(), target,
                stream);
          }

          // .roc.im.sdk.net.FetchSingleLinkMessagesReq fetch_single_link_messages_request = 3;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.fetch_single_link_messages_request_, this_._impl_.fetch_single_link_messages_request_->GetCachedSize(), target,
                stream);
          }

          // .roc.im.sdk.net.SendBatchMessageReq send_batch_messages_request = 4;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.send_batch_messages_request_, this_._impl_.send_batch_messages_request_->GetCachedSize(), target,
                stream);
          }

          // string url = 5;
          if (!this_._internal_url().empty()) {
            const std::string& _s = this_._internal_url();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "roc.im.sdk.net.RequestBody.url");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:roc.im.sdk.net.RequestBody)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RequestBody::ByteSizeLong(const MessageLite& base) {
          const RequestBody& this_ = static_cast<const RequestBody&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RequestBody::ByteSizeLong() const {
          const RequestBody& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:roc.im.sdk.net.RequestBody)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string request_id = 1;
            if (!this_._internal_request_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_request_id());
            }
            // string url = 5;
            if (!this_._internal_url().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_url());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .roc.im.sdk.net.FetchMixedLinkMessagesReq fetch_mixed_link_messages_request = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.fetch_mixed_link_messages_request_);
            }
            // .roc.im.sdk.net.FetchSingleLinkMessagesReq fetch_single_link_messages_request = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.fetch_single_link_messages_request_);
            }
            // .roc.im.sdk.net.SendBatchMessageReq send_batch_messages_request = 4;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.send_batch_messages_request_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RequestBody::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RequestBody*>(&to_msg);
  auto& from = static_cast<const RequestBody&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:roc.im.sdk.net.RequestBody)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_request_id().empty()) {
    _this->_internal_set_request_id(from._internal_request_id());
  }
  if (!from._internal_url().empty()) {
    _this->_internal_set_url(from._internal_url());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.fetch_mixed_link_messages_request_ != nullptr);
      if (_this->_impl_.fetch_mixed_link_messages_request_ == nullptr) {
        _this->_impl_.fetch_mixed_link_messages_request_ =
            ::google::protobuf::Message::CopyConstruct<::roc::im::sdk::net::FetchMixedLinkMessagesReq>(arena, *from._impl_.fetch_mixed_link_messages_request_);
      } else {
        _this->_impl_.fetch_mixed_link_messages_request_->MergeFrom(*from._impl_.fetch_mixed_link_messages_request_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.fetch_single_link_messages_request_ != nullptr);
      if (_this->_impl_.fetch_single_link_messages_request_ == nullptr) {
        _this->_impl_.fetch_single_link_messages_request_ =
            ::google::protobuf::Message::CopyConstruct<::roc::im::sdk::net::FetchSingleLinkMessagesReq>(arena, *from._impl_.fetch_single_link_messages_request_);
      } else {
        _this->_impl_.fetch_single_link_messages_request_->MergeFrom(*from._impl_.fetch_single_link_messages_request_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.send_batch_messages_request_ != nullptr);
      if (_this->_impl_.send_batch_messages_request_ == nullptr) {
        _this->_impl_.send_batch_messages_request_ =
            ::google::protobuf::Message::CopyConstruct<::roc::im::sdk::net::SendBatchMessageReq>(arena, *from._impl_.send_batch_messages_request_);
      } else {
        _this->_impl_.send_batch_messages_request_->MergeFrom(*from._impl_.send_batch_messages_request_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RequestBody::CopyFrom(const RequestBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roc.im.sdk.net.RequestBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RequestBody::InternalSwap(RequestBody* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.request_id_, &other->_impl_.request_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.url_, &other->_impl_.url_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestBody, _impl_.send_batch_messages_request_)
      + sizeof(RequestBody::_impl_.send_batch_messages_request_)
      - PROTOBUF_FIELD_OFFSET(RequestBody, _impl_.fetch_mixed_link_messages_request_)>(
          reinterpret_cast<char*>(&_impl_.fetch_mixed_link_messages_request_),
          reinterpret_cast<char*>(&other->_impl_.fetch_mixed_link_messages_request_));
}

::google::protobuf::Metadata RequestBody::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ResponseBody::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ResponseBody>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ResponseBody, _impl_._has_bits_);
};

ResponseBody::ResponseBody(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:roc.im.sdk.net.ResponseBody)
}
inline PROTOBUF_NDEBUG_INLINE ResponseBody::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::roc::im::sdk::net::ResponseBody& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        response_id_(arena, from.response_id_) {}

ResponseBody::ResponseBody(
    ::google::protobuf::Arena* arena,
    const ResponseBody& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ResponseBody* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.fetch_mixed_link_messages_response_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::roc::im::sdk::net::FetchMixedLinkMessagesResp>(
                              arena, *from._impl_.fetch_mixed_link_messages_response_)
                        : nullptr;
  _impl_.fetch_single_link_messages_response_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::roc::im::sdk::net::FetchSingleLinkMessagesResp>(
                              arena, *from._impl_.fetch_single_link_messages_response_)
                        : nullptr;
  _impl_.send_batch_messages_response_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::roc::im::sdk::net::SendBatchMessageResp>(
                              arena, *from._impl_.send_batch_messages_response_)
                        : nullptr;
  _impl_.push_messages_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::roc::im::sdk::net::PushMessages>(
                              arena, *from._impl_.push_messages_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:roc.im.sdk.net.ResponseBody)
}
inline PROTOBUF_NDEBUG_INLINE ResponseBody::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        response_id_(arena) {}

inline void ResponseBody::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, fetch_mixed_link_messages_response_),
           0,
           offsetof(Impl_, push_messages_) -
               offsetof(Impl_, fetch_mixed_link_messages_response_) +
               sizeof(Impl_::push_messages_));
}
ResponseBody::~ResponseBody() {
  // @@protoc_insertion_point(destructor:roc.im.sdk.net.ResponseBody)
  SharedDtor(*this);
}
inline void ResponseBody::SharedDtor(MessageLite& self) {
  ResponseBody& this_ = static_cast<ResponseBody&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.response_id_.Destroy();
  delete this_._impl_.fetch_mixed_link_messages_response_;
  delete this_._impl_.fetch_single_link_messages_response_;
  delete this_._impl_.send_batch_messages_response_;
  delete this_._impl_.push_messages_;
  this_._impl_.~Impl_();
}

inline void* ResponseBody::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ResponseBody(arena);
}
constexpr auto ResponseBody::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ResponseBody),
                                            alignof(ResponseBody));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ResponseBody::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ResponseBody_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ResponseBody::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ResponseBody>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ResponseBody::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ResponseBody>(), &ResponseBody::ByteSizeLong,
            &ResponseBody::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ResponseBody, _impl_._cached_size_),
        false,
    },
    &ResponseBody::kDescriptorMethods,
    &descriptor_table_LCModel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ResponseBody::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 4, 47, 2> ResponseBody::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ResponseBody, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::roc::im::sdk::net::ResponseBody>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string response_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseBody, _impl_.response_id_)}},
    // .roc.im.sdk.net.FetchMixedLinkMessagesResp fetch_mixed_link_messages_response = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ResponseBody, _impl_.fetch_mixed_link_messages_response_)}},
    // .roc.im.sdk.net.FetchSingleLinkMessagesResp fetch_single_link_messages_response = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(ResponseBody, _impl_.fetch_single_link_messages_response_)}},
    // .roc.im.sdk.net.SendBatchMessageResp send_batch_messages_response = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 2, PROTOBUF_FIELD_OFFSET(ResponseBody, _impl_.send_batch_messages_response_)}},
    // .roc.im.sdk.net.PushMessages push_messages = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 3, 3, PROTOBUF_FIELD_OFFSET(ResponseBody, _impl_.push_messages_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string response_id = 1;
    {PROTOBUF_FIELD_OFFSET(ResponseBody, _impl_.response_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .roc.im.sdk.net.FetchMixedLinkMessagesResp fetch_mixed_link_messages_response = 2;
    {PROTOBUF_FIELD_OFFSET(ResponseBody, _impl_.fetch_mixed_link_messages_response_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .roc.im.sdk.net.FetchSingleLinkMessagesResp fetch_single_link_messages_response = 3;
    {PROTOBUF_FIELD_OFFSET(ResponseBody, _impl_.fetch_single_link_messages_response_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .roc.im.sdk.net.SendBatchMessageResp send_batch_messages_response = 4;
    {PROTOBUF_FIELD_OFFSET(ResponseBody, _impl_.send_batch_messages_response_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .roc.im.sdk.net.PushMessages push_messages = 5;
    {PROTOBUF_FIELD_OFFSET(ResponseBody, _impl_.push_messages_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::roc::im::sdk::net::FetchMixedLinkMessagesResp>()},
    {::_pbi::TcParser::GetTable<::roc::im::sdk::net::FetchSingleLinkMessagesResp>()},
    {::_pbi::TcParser::GetTable<::roc::im::sdk::net::SendBatchMessageResp>()},
    {::_pbi::TcParser::GetTable<::roc::im::sdk::net::PushMessages>()},
  }}, {{
    "\33\13\0\0\0\0\0\0"
    "roc.im.sdk.net.ResponseBody"
    "response_id"
  }},
};

PROTOBUF_NOINLINE void ResponseBody::Clear() {
// @@protoc_insertion_point(message_clear_start:roc.im.sdk.net.ResponseBody)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.response_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.fetch_mixed_link_messages_response_ != nullptr);
      _impl_.fetch_mixed_link_messages_response_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.fetch_single_link_messages_response_ != nullptr);
      _impl_.fetch_single_link_messages_response_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.send_batch_messages_response_ != nullptr);
      _impl_.send_batch_messages_response_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.push_messages_ != nullptr);
      _impl_.push_messages_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ResponseBody::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ResponseBody& this_ = static_cast<const ResponseBody&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ResponseBody::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ResponseBody& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:roc.im.sdk.net.ResponseBody)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string response_id = 1;
          if (!this_._internal_response_id().empty()) {
            const std::string& _s = this_._internal_response_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "roc.im.sdk.net.ResponseBody.response_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .roc.im.sdk.net.FetchMixedLinkMessagesResp fetch_mixed_link_messages_response = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.fetch_mixed_link_messages_response_, this_._impl_.fetch_mixed_link_messages_response_->GetCachedSize(), target,
                stream);
          }

          // .roc.im.sdk.net.FetchSingleLinkMessagesResp fetch_single_link_messages_response = 3;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.fetch_single_link_messages_response_, this_._impl_.fetch_single_link_messages_response_->GetCachedSize(), target,
                stream);
          }

          // .roc.im.sdk.net.SendBatchMessageResp send_batch_messages_response = 4;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.send_batch_messages_response_, this_._impl_.send_batch_messages_response_->GetCachedSize(), target,
                stream);
          }

          // .roc.im.sdk.net.PushMessages push_messages = 5;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.push_messages_, this_._impl_.push_messages_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:roc.im.sdk.net.ResponseBody)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ResponseBody::ByteSizeLong(const MessageLite& base) {
          const ResponseBody& this_ = static_cast<const ResponseBody&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ResponseBody::ByteSizeLong() const {
          const ResponseBody& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:roc.im.sdk.net.ResponseBody)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string response_id = 1;
            if (!this_._internal_response_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_response_id());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000000fu) {
            // .roc.im.sdk.net.FetchMixedLinkMessagesResp fetch_mixed_link_messages_response = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.fetch_mixed_link_messages_response_);
            }
            // .roc.im.sdk.net.FetchSingleLinkMessagesResp fetch_single_link_messages_response = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.fetch_single_link_messages_response_);
            }
            // .roc.im.sdk.net.SendBatchMessageResp send_batch_messages_response = 4;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.send_batch_messages_response_);
            }
            // .roc.im.sdk.net.PushMessages push_messages = 5;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.push_messages_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ResponseBody::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ResponseBody*>(&to_msg);
  auto& from = static_cast<const ResponseBody&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:roc.im.sdk.net.ResponseBody)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_response_id().empty()) {
    _this->_internal_set_response_id(from._internal_response_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.fetch_mixed_link_messages_response_ != nullptr);
      if (_this->_impl_.fetch_mixed_link_messages_response_ == nullptr) {
        _this->_impl_.fetch_mixed_link_messages_response_ =
            ::google::protobuf::Message::CopyConstruct<::roc::im::sdk::net::FetchMixedLinkMessagesResp>(arena, *from._impl_.fetch_mixed_link_messages_response_);
      } else {
        _this->_impl_.fetch_mixed_link_messages_response_->MergeFrom(*from._impl_.fetch_mixed_link_messages_response_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.fetch_single_link_messages_response_ != nullptr);
      if (_this->_impl_.fetch_single_link_messages_response_ == nullptr) {
        _this->_impl_.fetch_single_link_messages_response_ =
            ::google::protobuf::Message::CopyConstruct<::roc::im::sdk::net::FetchSingleLinkMessagesResp>(arena, *from._impl_.fetch_single_link_messages_response_);
      } else {
        _this->_impl_.fetch_single_link_messages_response_->MergeFrom(*from._impl_.fetch_single_link_messages_response_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.send_batch_messages_response_ != nullptr);
      if (_this->_impl_.send_batch_messages_response_ == nullptr) {
        _this->_impl_.send_batch_messages_response_ =
            ::google::protobuf::Message::CopyConstruct<::roc::im::sdk::net::SendBatchMessageResp>(arena, *from._impl_.send_batch_messages_response_);
      } else {
        _this->_impl_.send_batch_messages_response_->MergeFrom(*from._impl_.send_batch_messages_response_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.push_messages_ != nullptr);
      if (_this->_impl_.push_messages_ == nullptr) {
        _this->_impl_.push_messages_ =
            ::google::protobuf::Message::CopyConstruct<::roc::im::sdk::net::PushMessages>(arena, *from._impl_.push_messages_);
      } else {
        _this->_impl_.push_messages_->MergeFrom(*from._impl_.push_messages_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseBody::CopyFrom(const ResponseBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roc.im.sdk.net.ResponseBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ResponseBody::InternalSwap(ResponseBody* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.response_id_, &other->_impl_.response_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResponseBody, _impl_.push_messages_)
      + sizeof(ResponseBody::_impl_.push_messages_)
      - PROTOBUF_FIELD_OFFSET(ResponseBody, _impl_.fetch_mixed_link_messages_response_)>(
          reinterpret_cast<char*>(&_impl_.fetch_mixed_link_messages_response_),
          reinterpret_cast<char*>(&other->_impl_.fetch_mixed_link_messages_response_));
}

::google::protobuf::Metadata ResponseBody::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace net
}  // namespace sdk
}  // namespace im
}  // namespace roc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_LCModel_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
